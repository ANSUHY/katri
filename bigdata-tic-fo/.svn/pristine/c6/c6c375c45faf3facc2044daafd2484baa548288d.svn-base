<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.katri.web.platformSvc.myData.mapper.MyDataStatMapper">

<!-- [나의 시험인증 현황] -> [통계] > 인증 WHERE조건 -->
<sql id="myDataStatCertWhere">
	/* [나의 시험인증 현황] -> [통계] > 인증 WHERE조건 */
	INNER JOIN pt_rf_cert_rcpt_rlt prcrr	/* PT_RF_인증서접수관계 */
		ON prcrr.inst_id = ${alias_cert}inst_id AND prcrr.cert_no = ${alias_cert}cert_no
	INNER JOIN pt_rf_rcpt_bas prrb 			/* 접수기본 */
		ON prrb.inst_id = prcrr.inst_id
			AND prrb.inst_rcpt_no = prcrr.inst_rcpt_no
			AND REPLACE(prrb.rcpt_co_brno , '-', '') = (SELECT brno FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}) /* 접수기본.접수회사사업자등록번호 = 로그인한 사용자 사업자번호 */
			AND ((CASE WHEN prrb.grp_id IS NULL THEN '9999999999' WHEN prrb.grp_id = '_' THEN '9999999999' else prrb.grp_id END) = (SELECT ent_grp_mng_no FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}))  /* 그룹아이디 = 로그인한 사용자 그룹관리번호 */
</sql>

<!-- [나의 시험인증 현황] -> [통계] > 성적서,시험항목 WHERE조건 -->
<sql id="myDataStatRprtWhere">
		/* [나의 시험인증 현황] -> [통계] > 성적서,시험항목 WHERE조건 */
		<!-- 입장구분 시작 -->
		<if test='searchType == null or searchType == ""'>
			AND ( /* [검색:입장구분:전체] */
		</if>
		<if test='searchType != null and searchType != "" and searchType == "2"'>
			AND /* [검색:입장구분:신청] */
		</if>
		<if test='(searchType == null or searchType == "") or (searchType != null and searchType != "" and searchType == "2")'>
			(
				((CASE WHEN ${alias_rcpt}grp_id IS NULL THEN '9999999999' WHEN ${alias_rcpt}grp_id = '_' THEN '9999999999' else ${alias_rcpt}grp_id END) = (SELECT ent_grp_mng_no FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}))  /* 그룹아이디 = 로그인한 사용자 그룹관리번호 */
				AND (REPLACE(${alias_rcpt}rcpt_co_brno , '-', '') = (SELECT brno FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}))	 /* 접수회사사업자등록번호 = 로그인한 사용자 사업자번호 */
			)
		</if>
		<if test='searchType == null or searchType == ""'>
			OR
		</if>
		<if test='searchType != null and searchType != "" and searchType == "3"'>
			AND /* [검색:입장구분:제출] */
		</if>
		<if test='(searchType == null or searchType == "") or (searchType != null and searchType != "" and searchType == "3")'>
			(
				(REPLACE(${alias_rcpt}sbmsn_co_brno , '-', '') = (SELECT brno FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}))  /* 제출회사사업자등록번호 = 로그인한 사용자 사업자번호 */
				AND coalesce(( /* 접수회사사업자등록번호(${alias_rcpt}rcpt_co_brno), 기관아이디(egscrah.inst_id), 기업그룹관리번호(${alias_rcpt}grp_id) 로  제출회사공개동의여부(egscrah.sbmsn_co_rls_agre_yn)이 최종 값이 Y인것만  */
						SELECT
							egscrah.sbmsn_co_rls_agre_yn --제출회사공개동의여부
						FROM tb_ent_grp_sbmsn_co_rls_agre_hist egscrah	/* 기업그룹제출회사공개동의이력 */
						INNER JOIN tb_ent_grp_bas egb					/* 기업그룹기본 */
							ON egb.brno = REPLACE(${alias_rcpt}rcpt_co_brno , '-', '')
							AND egb.ent_grp_mng_no = (CASE WHEN ${alias_rcpt}grp_id IS NULL THEN '9999999999' WHEN ${alias_rcpt}grp_id = '_' THEN '9999999999' else ${alias_rcpt}grp_id END)
							AND egb.ent_grp_sn = egscrah.ent_grp_sn
							AND egb.use_yn = 'Y'
						WHERE egscrah.inst_id = ${alias_rcpt}inst_id
						ORDER BY egscrah.crt_dt DESC
						LIMIT 1
					), 'N') = 'Y'
				)
		</if>
		<if test='searchType == null or searchType == ""'>
			)
		</if>
		<!-- 입장구분 끝 -->
</sql>


<!-- [나의 시험인증 현황] -> [통계] -->
<sql id="myDataStatInstId">
	<if test="instId != null and instId != ''">
		AND ${alias_inst_id}inst_id = #{instId}
	</if>
</sql>

<!-- [나의 시험인증 현황] -> [인증] -->
<sql id="myDataStatPrdt">
	<choose>
		<when test='certType == null or certType == ""'>
			AND SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) in ('01', '02', '03', '04', '05', '06', '07', '08', '09')	/*검색조건:법정기준-전체*/
		</when>
		<when test='certType == "2"'>
			AND SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) in ('07', '08', '09')	/*검색조건:법정기준-어린이법*/
		</when>
		<when test='certType == "3"'>
			AND SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) in ('01', '02', '03', '04', '05', '06')	/*검색조건:법정기준-전안법*/
		</when>
	</choose>
</sql>


<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] 기관 목록 조회 -->
<select id="selectInstList" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectInstList ([플랫폼서비스] -> [내 손안의 시험인증] -> [나의 시험인증 현황] 기관 목록 조회 ) */
	SELECT
			inst_id
		  , inst_eng_nm
	FROM pt_co_inst_bas
	WHERE inst_id NOT LIKE 'T000'
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] 사업자등록번호 조회 -->
<select id="selectMyDataStatBrno" parameterType="integer" resultType="string">
	SELECT brno FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] 년,월 정보 조회 -->
<select id="selectDateData" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectDateData ([플랫폼서비스] -> [내 손안의 시험인증] -> [나의 시험인증 현황] 년,월 정보 조회) */
	SELECT
		EXTRACT('YEAR' from NOW()) as year
	  , EXTRACT('MONTH' from NOW()) as month
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계]-> 년 기준 의뢰 현황 -> 인증 데이터 조회-->
<select id="selectStatCertDataByYear1" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectStatCertDataByYear1 ([플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계]-> 년 기준 의뢰 현황 -> 인증 데이터 ) */
		SELECT
				g.dt
				, COALESCE(sum(t.cnt), 0) as cnt
		FROM
		(
			SELECT TO_CHAR(GENERATE_SERIES(now() - INTERVAL '1 year', now(), '1 year') ,'YYYY') AS dt
		) g
		LEFT OUTER JOIN
		(
			SELECT
				SUBSTRING(cert.cert_ymd, 1, 4) as data_year
				, 1 as cnt
			FROM
				pt_rf_cert_bas cert				/*인증서기본*/
			INNER JOIN
				pt_rf_cert_rcpt_rlt rlt			/*인증서접수관계*/
				ON cert.inst_id = rlt.inst_id	/*기관아이디*/
				AND cert.cert_no = rlt.cert_no	/*인증번호*/
			<include refid='myDataStatCertWhere'>
				<property name="alias_cert" value="cert."/>
			</include>
			/* 검색 조건 */
			WHERE SUBSTRING(cert.cert_ymd, 1, 4) BETWEEN  TO_CHAR(NOW() - INTERVAL '1 year', 'YYYY') AND TO_CHAR(NOW(), 'YYYY')
			<include refid='myDataStatInstId'>
				<property name="alias_inst_id" value="cert."/>
			</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계]-> 년 기준 의뢰 현황 -> 성적서 데이터 조회 -->
<select id="selectStatRprtDataByYear" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectStatRprtDataByYear ([플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계]-> 년 기준 의뢰 현황 -> 성적서 데이터 ) */
		SELECT
				g.dt
			  , coalesce(sum(t.cnt), 0) as cnt
		FROM
		(
			SELECT TO_CHAR(GENERATE_SERIES(now() - INTERVAL '1 year', now(), '1 year') ,'YYYY') AS dt
		) g
		LEFT OUTER JOIN
			(
				SELECT
					SUBSTRING(rprt.rprt_issu_ymd, 1, 4) as data_year
					, 1 as cnt
				FROM
					pt_rf_rprt_bas rprt	/*성적서기본*/
				INNER JOIN pt_rf_rcpt_bas rcpt	/*접수기본*/ ON rprt.inst_id = rcpt.inst_id	/*기관아이디*/
				AND rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
				AND rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
			WHERE SUBSTRING(rprt.rprt_issu_ymd, 1, 4) BETWEEN TO_CHAR(now() - interval '1 year', 'YYYY') and TO_CHAR(now(), 'YYYY')
			<include refid='myDataStatRprtWhere'>
				<property name="alias_rcpt" value="rcpt."/>
			</include>
			<include refid='myDataStatInstId'>
				<property name="alias_inst_id" value="rprt."/>
			</include>
			) t
			ON g.dt = t.data_year
			GROUP BY g.dt
			ORDER BY g.dt ASC
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계] -> 년 기준 의뢰 현황 -> 시험항목 데이터 조회 -->
<select id="selectStatTestDataByYear" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatTestDataByYear ([플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계]-> 년 기준 의뢰 현황 -> 시험항목 데이터 ) */
	SELECT
	g.dt
	, COALESCE(sum(t.cnt), 0) as cnt
FROM
	(
		SELECT TO_CHAR(GENERATE_SERIES(now() - INTERVAL '1 year', now(), '1 year') ,'YYYY') AS dt
	) g
LEFT OUTER JOIN
	(
		SELECT
			SUBSTRING(rprt.rprt_issu_ymd, 1, 4) as data_year
			, 1 as cnt
		FROM
			pt_rf_test_item_bas item	/*시험항목기본*/
		INNER JOIN
			pt_rf_sample_bas sample	/*시료기본*/
			on item.inst_id = sample.inst_id
			and item.inst_rcpt_no = sample.inst_rcpt_no
			and item.rprt_no = sample.rprt_no
			and item.inst_pdctg_cd = sample.inst_pdctg_cd
			and item.inst_sample_no = sample.inst_sample_no
		INNER JOIN
			pt_rf_pdctg_bas pdctg	/*품목기본*/
			on sample.inst_id = pdctg.inst_id
			and sample.inst_rcpt_no = pdctg.inst_rcpt_no
			and sample.rprt_no = pdctg.rprt_no
			and sample.inst_pdctg_cd = pdctg.inst_pdctg_cd
		INNER JOIN
			pt_rf_rcpt_bas rcpt	/*접수기본*/
			on pdctg.inst_id = rcpt.inst_id
			and pdctg.inst_rcpt_no = rcpt.inst_rcpt_no
			and pdctg.rprt_no = rcpt.rprt_no
		INNER JOIN
			pt_rf_rprt_bas rprt	/*성적서기본*/
			on rcpt.inst_id = rprt.inst_id	/*기관아이디*/
			and rcpt.inst_rcpt_no = rprt.inst_rcpt_no	/*기관접수번호*/
			and rcpt.rprt_no = rprt.rprt_no	/*성적서번호*/
		WHERE
			rprt.rprt_issu_ymd != '_'
			AND rprt.rprt_issu_ymd is not null
			AND SUBSTRING(rprt.rprt_issu_ymd, 1, 4) BETWEEN  TO_CHAR(NOW() - interval '1 year', 'YYYY') and TO_CHAR(now(), 'YYYY')
		<include refid='myDataStatRprtWhere'>
			<property name="alias_rcpt" value="rcpt."/>
		</include>
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="rcpt."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계] -> 월 기준 의뢰 현황 -> 인증 데이터 조회 -->
<select id="selectStatCertDataByMonth" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq"  resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatCertDataByMonth ([플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계]-> 월 기준 의뢰 현황 -> 인증 데이터) */
SELECT
	g.dt
	, COALESCE(SUM(t.cnt), 0) as cnt
FROM
	(
		SELECT TO_CHAR(GENERATE_SERIES( NOW() - interval '1 month' , NOW() , '1 month'::INTERVAL) ,'YY.MM') AS dt
	) g
LEFT OUTER JOIN
	(
		SELECT
			TO_CHAR(TO_DATE(cert.cert_ymd, 'YYYYMMDD'), 'YY.MM')as data_year
			, 1 as cnt
		FROM
			pt_rf_cert_bas cert								/*인증서기본*/
		<include refid='myDataStatCertWhere'>
			<property name="alias_cert" value="cert."/>
		</include>
		WHERE TO_CHAR(TO_DATE(cert.cert_ymd, 'YYYYMMDD'), 'YY.MM') BETWEEN  TO_CHAR(NOW() - interval '1 month', 'YY.MM') and TO_CHAR(NOW(), 'YY.MM')
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="cert."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계] -> 월 기준 의뢰 현황 -> 성적서 데이터 조회 -->
<select id="selectStatRprtDataByMonth" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatRprtDataByMonth([플랫폼서비스] -> [통계] -> 월 기준 의뢰 현황 -> 성적서 )*/
	SELECT
	g.dt
	, COALESCE(SUM(t.cnt), 0) as cnt
FROM
	(
		SELECT TO_CHAR(GENERATE_SERIES( NOW() - interval '1 month' , NOW() , '1 month'::INTERVAL) ,'YY.MM') AS dt
	) g
LEFT OUTER JOIN
	(
		SELECT
			TO_CHAR(TO_DATE(rprt.rprt_issu_ymd, 'YYYYMMDD'), 'YY.MM')as data_year
			, 1 as cnt
		FROM
			pt_rf_rprt_bas rprt	/*성적서기본*/
		INNER JOIN
			pt_rf_rcpt_bas rcpt	/*접수기본*/
			on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
			and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
			and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
		WHERE
			rprt.rprt_issu_ymd != '_'
			AND rprt.rprt_issu_ymd is not null
			AND SUBSTRING(rprt.rprt_issu_ymd, 1, 6) BETWEEN  TO_CHAR(NOW() - interval '1 month', 'YYYYMM') and TO_CHAR(NOW(), 'YYYYMM')
		<include refid='myDataStatRprtWhere'>
			<property name="alias_rcpt" value="rcpt."/>
		</include>
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="rcpt."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<!-- [플랫폼서비스] -> [내손안의 시험인증] -> [나의 시험인증 현황] -> [통계] -> 월 기준 의뢰 현황 -> 시험항목 데이터 조회 -->
<select id="selectStatTestDataByMonth" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatTestDataByMonth([나의 시험인증 현황] -> [통계] -> [월 기준 의뢰 현황] -> [시험항목] */

	SELECT
	g.dt
	, COALESCE(SUM(t.cnt), 0) as cnt
FROM
	(
		SELECT TO_CHAR(GENERATE_SERIES( NOW() - interval '1 month' , NOW() , '1 month'::INTERVAL) ,'YY.MM') AS dt
	) g
LEFT OUTER JOIN
	(
		SELECT
			fn_date_fmt(rprt.rprt_issu_ymd, 'YY.MM') as data_year
			, 1 as cnt
		FROM
			pt_rf_test_item_bas item	/*시험항목기본*/
		INNER JOIN
			pt_rf_sample_bas sample	/*시료기본*/
			on item.inst_id = sample.inst_id
			and item.inst_rcpt_no = sample.inst_rcpt_no
			and item.rprt_no = sample.rprt_no
			and item.inst_pdctg_cd = sample.inst_pdctg_cd
			and item.inst_sample_no = sample.inst_sample_no
		INNER JOIN
			pt_rf_pdctg_bas pdctg	/*품목기본*/
			on sample.inst_id = pdctg.inst_id
			and sample.inst_rcpt_no = pdctg.inst_rcpt_no
			and sample.rprt_no = pdctg.rprt_no
			and sample.inst_pdctg_cd = pdctg.inst_pdctg_cd
		INNER JOIN
			pt_rf_rcpt_bas rcpt	/*접수기본*/
			on pdctg.inst_id = rcpt.inst_id
			and pdctg.inst_rcpt_no = rcpt.inst_rcpt_no
			and pdctg.rprt_no = rcpt.rprt_no
		INNER JOIN
			pt_rf_rprt_bas rprt	/*성적서기본*/
			on rcpt.inst_id = rprt.inst_id	/*기관아이디*/
			and rcpt.inst_rcpt_no = rprt.inst_rcpt_no	/*기관접수번호*/
			and rcpt.rprt_no = rprt.rprt_no	/*성적서번호*/
		WHERE
			rprt.rprt_issu_ymd != '_'
			AND rprt.rprt_issu_ymd is not null
			AND SUBSTRING(rprt.rprt_issu_ymd, 1, 6) BETWEEN  TO_CHAR(NOW() - interval '1 month', 'YYYYMM') and TO_CHAR(NOW(), 'YYYYMM')
		<include refid='myDataStatRprtWhere'>
			<property name="alias_rcpt" value="rcpt."/>
		</include>
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="rcpt."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>


<select id="selectStatReqDataByMonth" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatReqDataByMonth([나의 시험인증 현황] -> [통계] -> [월별 내 의뢰 추이] (인증) )*/
	SELECT
	g.dt
	, coalesce(sum(t.cnt), 0) as cnt
FROM
	(
		SELECT TO_CHAR(GENERATE_SERIES( NOW() - interval '11 month' , NOW() , '1 month'::INTERVAL) ,'YY.MM') AS dt
	) g
LEFT OUTER JOIN
	(
		SELECT
			fn_date_fmt(cert.cert_ymd, 'YY.MM') as data_year
			, 1 as cnt
		FROM
			pt_rf_cert_bas cert				/*인증서기본*/
		<include refid='myDataStatCertWhere'>
			<property name="alias_cert" value="cert."/>
		</include>
		WHERE
			fn_date_fmt(cert.cert_ymd, 'YY.MM') BETWEEN  TO_CHAR(NOW() - interval '11 month', 'YY.MM') and TO_CHAR(NOW(), 'YY.MM')
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="cert."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<select id="selectCertRateData2" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectCertRateData2([나의 시험인증 현황] -> [통계] -> [월별 내 의뢰 추이] (성적서) )*/
SELECT
	g.dt
	, COALESCE(sum(t.cnt), 0) as cnt
FROM
	(
		SELECT TO_CHAR(GENERATE_SERIES( NOW() - interval '11 month' , NOW() , '1 month'::INTERVAL) ,'YY.MM') AS dt
	) g
LEFT OUTER JOIN
	(
		SELECT
			fn_date_fmt(rprt.rprt_issu_ymd, 'YY.MM') as data_year
			, 1 as cnt
		FROM
			pt_rf_rprt_bas rprt	/*성적서기본*/
		INNER JOIN
			pt_rf_rcpt_bas rcpt	/*접수기본*/
			on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
			and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
			and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
		WHERE
			rprt.rprt_issu_ymd != '_'
			AND rprt.rprt_issu_ymd is not null
			AND SUBSTRING(rprt.rprt_issu_ymd, 1, 6) BETWEEN  TO_CHAR(NOW() - interval '1 month', 'YYYYMM') and TO_CHAR(NOW(), 'YYYYMM')
		<include refid='myDataStatRprtWhere'>
			<property name="alias_rcpt" value="rcpt."/>
		</include>
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="rcpt."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<select id="selectCertRateData3" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectCertRateData3([나의 시험인증 현황] -> [통계] -> [월별 내 의뢰 추이] (시험항목) )*/
	select
	g.dt
	, coalesce(sum(t.cnt), 0) as cnt
from
	(
		SELECT TO_CHAR(GENERATE_SERIES( NOW() - interval '11 month' , NOW() , '1 month'::INTERVAL) ,'YY.MM') AS dt
	) g
left outer join
	(
		select
			fn_date_fmt(rprt.rprt_issu_ymd, 'YY.MM') as data_year
			, 1 as cnt
		from
			pt_rf_test_item_bas item	/*시험항목기본*/
		inner join
			pt_rf_sample_bas sample	/*시료기본*/
			on item.inst_id = sample.inst_id
			and item.inst_rcpt_no = sample.inst_rcpt_no
			and item.rprt_no = sample.rprt_no
			and item.inst_pdctg_cd = sample.inst_pdctg_cd
			and item.inst_sample_no = sample.inst_sample_no
		inner join
			pt_rf_pdctg_bas pdctg	/*품목기본*/
			on sample.inst_id = pdctg.inst_id
			and sample.inst_rcpt_no = pdctg.inst_rcpt_no
			and sample.rprt_no = pdctg.rprt_no
			and sample.inst_pdctg_cd = pdctg.inst_pdctg_cd
		inner join
			pt_rf_rcpt_bas rcpt	/*접수기본*/
			on pdctg.inst_id = rcpt.inst_id
			and pdctg.inst_rcpt_no = rcpt.inst_rcpt_no
			and pdctg.rprt_no = rcpt.rprt_no
		inner join
			pt_rf_rprt_bas rprt	/*성적서기본*/
			on rcpt.inst_id = rprt.inst_id	/*기관아이디*/
			and rcpt.inst_rcpt_no = rprt.inst_rcpt_no	/*기관접수번호*/
			and rcpt.rprt_no = rprt.rprt_no	/*성적서번호*/
		where
			rprt.rprt_issu_ymd != '_'
			AND rprt.rprt_issu_ymd is not null
			AND SUBSTRING(rprt.rprt_issu_ymd, 1, 6) BETWEEN  TO_CHAR(NOW() - interval '1 month', 'YYYYMM') and TO_CHAR(NOW(), 'YYYYMM')
		<include refid='myDataStatRprtWhere'>
			<property name="alias_rcpt" value="rcpt."/>
		</include>
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="rcpt."/>
		</include>
		) t
		ON g.dt = t.data_year
		GROUP BY g.dt
		ORDER BY g.dt ASC
</select>

<!--  [나의 시험인증 현황] -> [인증] -> [~년 인증 전체 현황] -> [전체 인증 건수] -->
<select id="selectCertCountData" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectCertCountData ([나의 시험인증 현황] -> [인증] -> [~년 인증 전체 현황] -> [전체 인증 건수] ) */
		SELECT
			COUNT(1) as cnt
		FROM
			pt_rf_cert_bas cert	/*인증서기본*/
		INNER JOIN
			pt_rf_cert_rcpt_rlt rlt	/*인증서접수관계*/
			on cert.inst_id = rlt.inst_id	/*기관아이디*/
			and cert.cert_no = rlt.cert_no	/*인증번호*/
			<include refid='myDataStatCertWhere'>
				<property name="alias_cert" value="cert."/>
			</include>
		WHERE
			SUBSTRING(cert.cert_ymd, 1, 4) = TO_CHAR(NOW(), 'YYYY')
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="cert."/>
		</include>

</select>


<!-- [나의 시험인증 현황] -> [인증] -> [~년 인증 전체 현황] -> [월별 인증 추이 (건수)] -->
<select id="selectStatCertCountByMonthData" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatCertCountByMonthData ([나의 시험인증 현황] -> [인증] -> [~년 인증 전체 현황] -> [월별 인증 추이 (건수)]) */
	SELECT
	g.dt
	, coalesce(sum(t.cnt), 0) as cnt
FROM
	(
		SELECT
			TO_CHAR(a.dd, 'YY.MM') as dt
		FROM
			(
				(
					WITH date_series as
						(
							SELECT DATE(generate_series(NOW() - interval '11 month', now() , '1 month')) as dd
						)
					SELECT
						dd
					FROM
						date_series
				)
			) a
	) g
LEFT OUTER JOIN
	(
		SELECT
			fn_date_fmt(cert.cert_ymd, 'YY.MM') as cert_ym
			, 1 as cnt
		FROM
			pt_rf_cert_bas cert	/*인증서기본*/
		INNER JOIN
			pt_rf_cert_rcpt_rlt rlt	/*인증서접수관계*/
			on cert.inst_id = rlt.inst_id	/*기관아이디*/
			and cert.cert_no = rlt.cert_no	/*인증번호*/
			<include refid='myDataStatCertWhere'>
				<property name="alias_cert" value="cert."/>
			</include>
		WHERE
			SUBSTRING(cert.cert_ymd, 1, 6) BETWEEN to_char(now() - interval '11 month', 'YYYYMM') and TO_CHAR(now(), 'YYYYMM')
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="cert."/>
		</include>
		) t
			ON g.dt = t.cert_ym
			GROUP BY g.dt
			ORDER BY g.dt ASC
</select>




<!-- [나의 시험인증 현황] -> [인증] -> ~년 인증 현황 -> 법정기준 인증 비율 -->
<select id="selectCertRateDataByYear" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectCertRateDataByYear ([나의 시험인증 현황] -> [인증] -> [~년 인증 현황] -> [법정기준 인증 비율]) */
	SELECT
	g.stty_prdt_clf_cd_type
	, coalesce(sum(t.cnt), 0) as cnt
FROM
	(
		SELECT
			'A' as stty_prdt_clf_cd_type
		UNION ALL
		SELECT
			'B' as stty_prdt_clf_cd_type
		UNION ALL
		SELECT
			'C' as stty_prdt_clf_cd_type
	) g
LEFT OUTER JOIN
	(
		SELECT
			SUBSTRING(cert.cert_ymd, 1, 4) as cert_ym
			, CASE
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '01' then 'A'	/*1 안전인증대상 전기용품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '02' then 'B'	/*2 안전확인대상 전기용품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '03' then 'C'	/*3 공급자적합성확인대상 전기용품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '04' then 'A'	/*4 안전인증대상 생활용품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '05' then 'B'	/*5 안전확인대상 생활용품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '06' then 'C'	/*6 공급자적합성확인대상 생활용품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '07' then 'A'	/*7 안전인증대상 어린이제품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '08' then 'B'	/*8 안전확인대상 어린이제품*/
				WHEN SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '09' then 'C'	/*9 공급자적합성확인대상 어린이제품*/
			END as stty_prdt_clf_cd_type	/*법정기준유형(A:안전인증대상, B:안전확인대상, C:공급자적합성확인대상)*/
			, 1 as cnt
		FROM
			pt_rf_cert_bas cert	/*인증서기본*/
		INNER JOIN
			pt_rf_cert_rcpt_rlt rlt	/*인증서접수관계*/
			on cert.inst_id = rlt.inst_id	/*기관아이디*/
			and cert.cert_no = rlt.cert_no	/*인증번호*/
		<include refid='myDataStatCertWhere'>
			<property name="alias_cert" value="cert."/>
		</include>
		WHERE
			SUBSTRING(cert.cert_ymd, 1, 4) = to_char(now(), 'YYYY')
	<include refid="myDataStatPrdt"/>
	<include refid='myDataStatInstId'>
		<property name="alias_inst_id" value="cert."/>
	</include>
	) t
		ON g.stty_prdt_clf_cd_type = t.stty_prdt_clf_cd_type
		GROUP BY g.stty_prdt_clf_cd_type
		ORDER BY g.stty_prdt_clf_cd_type ASC
</select>


<select id="selectStatProgressCount" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectStatProgressCount ([나의 시험인증 현황] -> [인증] -> [~년 인증 현황] -> [월별 법정기준 인증 추이(건수)]) */
	SELECT
			  g.stty_prdt_clf_cd_type
			, g.dt
			, coalesce(sum(t.cnt), 0) as cnt
	FROM
	(
		SELECT
			c.stty_prdt_clf_cd_type
			, c.ord
			, k.dt
		FROM
			(
				SELECT
					'A' as stty_prdt_clf_cd_type
					, 1 as ord
				UNION ALL
				SELECT
					'B' as stty_prdt_clf_cd_type
					, 2 as ord
				UNION ALL
				SELECT
					'C' as stty_prdt_clf_cd_type
					, 3 as ord
			) c
			, (
				SELECT
					TO_CHAR(a.dd, 'YYYYMM') as dt
				FROM
					(
						(
							with date_series as
								(
									select date(generate_series(now() - interval '11 month', now(), '1 month')) as dd
								)
							SELECT
								dd
							FROM
								date_series
						)
					) a
			) k
	) g
LEFT OUTER JOIN
	(
		SELECT
			SUBSTRING(cert.cert_ymd, 1, 6) as cert_ym
			, CASE
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '01' then 'A'	/*1 안전인증대상 전기용품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '02' then 'B'	/*2 안전확인대상 전기용품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '03' then 'C'	/*3 공급자적합성확인대상 전기용품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '04' then 'A'	/*4 안전인증대상 생활용품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '05' then 'B'	/*5 안전확인대상 생활용품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '06' then 'C'	/*6 공급자적합성확인대상 생활용품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '07' then 'A'	/*7 안전인증대상 어린이제품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '08' then 'B'	/*8 안전확인대상 어린이제품*/
				WHEN substring(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 2) = '09' then 'C'	/*9 공급자적합성확인대상 어린이제품*/
			END as stty_prdt_clf_cd_type	/*법정기준유형(A:안전인증대상, B:안전확인대상, C:공급자적합성확인대상)*/
			, 1 as cnt
		FROM
			pt_rf_cert_bas cert	/*인증서기본*/
		INNER JOIN
			pt_rf_cert_rcpt_rlt rlt	/*인증서접수관계*/
			on cert.inst_id = rlt.inst_id	/*기관아이디*/
			and cert.cert_no = rlt.cert_no	/*인증번호*/
			<include refid='myDataStatCertWhere'>
				<property name="alias_cert" value="cert."/>
			</include>
		WHERE
			SUBSTRING(cert.cert_ymd, 1, 6) BETWEEN TO_CHAR(now() - interval '11 month', 'YYYYMM') and TO_CHAR(now(), 'YYYYMM')
		<include refid="myDataStatPrdt"/>
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="cert."/>
		</include>
		) t
		ON g.stty_prdt_clf_cd_type = t.stty_prdt_clf_cd_type
		AND g.dt = t.cert_ym
		GROUP BY g.stty_prdt_clf_cd_type, g.dt, g.ord
		ORDER BY g.ord asc, g.dt asc
</select>

<select id="selectCertRateByItem" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
	/* MyDataStatMapper.selectCertRateByItem ([나의 시험인증 현황] -> [~년 품목별 인증 현황] -> [품목별 인증 비율]) */
	SELECT
		t.pdctg_cd
		, t.pdctg_nm
		, coalesce(sum(t.cnt), 0) as cnt
FROM
	(
		SELECT
			SUBSTRING(LPAD(cert.stty_prdt_clf_cd, 8, '0'), 1, 6) as pdctg_cd	/*품목코드*/
			, clf.pdctg_nm	/*품목명*/
			, 1 as cnt
		FROM pt_rf_cert_bas cert	/*인증서기본*/
		<include refid='myDataStatCertWhere'>
			<property name="alias_cert" value="cert."/>
		</include>
		INNER JOIN
			pt_co_stty_prdt_clf_cd clf	/*CO_법정제품분류코드*/
			on cert.stty_prdt_clf_cd = clf.stty_prdt_clf_cd
			and clf.use_yn = 'Y'
		WHERE
			SUBSTRING(cert.cert_ymd, 1, 4) = to_char(now(), 'YYYY')
		<include refid='myDataStatInstId'>
			<property name="alias_inst_id" value="cert."/>
		</include>
			) t
		GROUP BY t.pdctg_cd, t.pdctg_nm
		ORDER BY COALESCE(sum(t.cnt), 0) desc, t.pdctg_cd asc
</select>


<select id="selectChartJsTop3ProgressByItem" parameterType="list" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectChartJsTop3ProgressByItem ([나의 시험인증 현황] -> [~년 품목별 인증 현황] -> [월별 TOP3 품목별 인증 추이(건수)]) */
		SELECT
				g.dt
				, g.pdctg_cd
				, t.pdctg_nm
				, coalesce(t.cnt, 0) as cnt
			, t.tot_cnt
	FROM
		(
			SELECT
				c.pdctg_cd
				, c.ord
				, k.dt
			FROM
			(
			<foreach collection="pdctgCdList" item="item" index="index" separator="UNION ALL">
				SELECT
					#{item} as pdctg_cd
					, #{index} as ord
			</foreach>
			) c
			, (
				SELECT
					TO_CHAR(a.dd, 'YYYYMM') as dt
				FROM
					(
						(
							with date_series as
								(
									SELECT DATE(GENERATE_SERIES(NOW() - interval '11 month', now(), '1 month')) as dd
								)
							SELECT
								dd
							FROM
								date_series
						)
					) a
			) k
	) g
LEFT OUTER JOIN
	(
		SELECT
			r.cert_ym
			, r.pdctg_cd
			, r.pdctg_nm
			, coalesce(sum(r.cnt), 0) as cnt
			, r.tot_cnt
		FROM
			(
				SELECT
					SUBSTRING(cert.cert_ymd, 1, 6) as cert_ym
					, SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 6) as pdctg_cd	/*품목코드*/
					, clf.pdctg_nm	/*품목명*/
					, 1 as cnt
					, COUNT(SUBSTRING(LPAD(cert.stty_prdt_clf_cd, 8, '0'), 1, 6)) over(partition by SUBSTRING(LPAD(cert.stty_prdt_clf_cd, 8, '0'), 1, 6)) as tot_cnt
				FROM
					pt_rf_cert_bas cert	/*인증서기본*/
				<include refid='myDataStatCertWhere'>
					<property name="alias_cert" value="cert."/>
				</include>
				INNER JOIN
					pt_co_stty_prdt_clf_cd clf	/*CO_법정제품분류코드*/
					on cert.stty_prdt_clf_cd = clf.stty_prdt_clf_cd
					and clf.use_yn = 'Y'
				WHERE
					SUBSTRING(cert.cert_ymd, 1, 6) BETWEEN TO_CHAR(NOW() - interval '11 month', 'YYYYMM') and TO_CHAR(now(), 'YYYYMM')
				AND SUBSTRING(lpad(cert.stty_prdt_clf_cd, 8, '0'), 1, 6) IN
				<foreach collection="pdctgCdList" item="item" index="index" open="(" close=")" separator=",">
					#{item}
				</foreach>
				<include refid='myDataStatInstId'>
					<property name="alias_inst_id" value="cert."/>
				</include>
				) r
				GROUP BY
					r.cert_ym, r.pdctg_cd, r.pdctg_nm, r.tot_cnt
			) t
			ON g.dt = t.cert_ym
			AND g.pdctg_cd = t.pdctg_cd
			ORDER BY g.ord asc, g.dt asc
</select>










	<!-- [나의 시험인증 현황] -> [성적서] 관련 조건 sql -->
	<sql id="sqlWhereMyDataRprtInfo">

		<!-- [조회조건] 입장 구분 -->
			<choose>
				<!-- 전체 -->
				<when test="searchType == null or searchType == ''">
					AND (
							(
								((CASE WHEN rcpt.grp_id IS NULL THEN '9999999999' WHEN rcpt.grp_id = '_' THEN '9999999999' else rcpt.grp_id END) = (SELECT ent_grp_mng_no FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}))  /* 그룹아이디 = 로그인한 사용자 그룹관리번호 */
								AND REPLACE(rcpt.rcpt_co_brno , '-', '') = #{brno}	 /* 접수회사사업자등록번호 = 로그인한 사용자 사업자번호 */
							)
						OR
							(
								REPLACE(rcpt.sbmsn_co_brno , '-', '') = #{brno}	/*제출회사사업자등록번호, 검색조건:조회조건>제출*/
								and coalesce((
									select
										egscrah.sbmsn_co_rls_agre_yn	/*제출회사공개동의여부*/
									from
										tb_ent_grp_sbmsn_co_rls_agre_hist egscrah	/*기업그룹제출회사공개동의이력*/
									inner join
										tb_ent_grp_bas egb	/*기업그룹기본*/
										on egb.brno = REPLACE(rcpt.rcpt_co_brno , '-', '')
										and egb.ent_grp_mng_no = (CASE WHEN rcpt.grp_id IS NULL THEN '9999999999' WHEN rcpt.grp_id = '_' THEN '9999999999' else rcpt.grp_id END)
										and egb.ent_grp_sn = egscrah.ent_grp_sn
										and egb.use_yn = 'Y'
									where
										egscrah.inst_id = rcpt.inst_id
									order by egscrah.crt_dt desc
									limit 1
								), 'N') = 'Y'
							)
						)
				</when>

				<!-- 신청 -->
				<when test='searchType == "APPLY"'>
					AND
						(
							((CASE WHEN rcpt.grp_id IS NULL THEN '9999999999' WHEN rcpt.grp_id = '_' THEN '9999999999' else rcpt.grp_id END) = (SELECT ent_grp_mng_no FROM tb_ent_grp_bas WHERE use_yn='Y' AND ent_grp_sn = #{entGrpSn}))  /* 그룹아이디 = 로그인한 사용자 그룹관리번호 */
							AND REPLACE(rcpt.rcpt_co_brno , '-', '') = #{brno}	 /* 접수회사사업자등록번호 = 로그인한 사용자 사업자번호 */
						)
				</when>

				<!-- 제출 -->
				<when test='searchType == "SUBMIT"'>
					AND
						(
							REPLACE(rcpt.sbmsn_co_brno , '-', '') = #{brno}	/*제출회사사업자등록번호, 검색조건:조회조건>제출*/
							and coalesce((
									select
										egscrah.sbmsn_co_rls_agre_yn	/*제출회사공개동의여부*/
									from
										tb_ent_grp_sbmsn_co_rls_agre_hist egscrah	/*기업그룹제출회사공개동의이력*/
									inner join
										tb_ent_grp_bas egb	/*기업그룹기본*/
										on egb.brno = REPLACE(rcpt.rcpt_co_brno , '-', '')
										and egb.ent_grp_mng_no = (CASE WHEN rcpt.grp_id IS NULL THEN '9999999999' WHEN rcpt.grp_id = '_' THEN '9999999999' else rcpt.grp_id END)
										and egb.ent_grp_sn = egscrah.ent_grp_sn
										and egb.use_yn = 'Y'
									where
										egscrah.inst_id = rcpt.inst_id
									order by egscrah.crt_dt desc
									limit 1
								), 'N') = 'Y'
						)
				</when>

			</choose>

			<!-- [조회조건] 기관 선택 -->
			<if test="instId != null and instId != ''">
				and rcpt.inst_id = #{instId}	/*검색조건:시험기관*/
			</if>

	</sql>


	<!-- [나의 시험인증 현황] -> [성적서] > [성적서 합격률] 데이터 조회 -->
	<select id="selectMyDataRprtPassRate" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtPassRate ([성적서] > [성적서 합격률] 데이터 조회) */

		select
			g.intgr_gnrlz_jgmt_rslt_cd
			, coalesce(sum(t.cnt), 0) as cnt
		from
			(
				select
					'30' as intgr_gnrlz_jgmt_rslt_cd
				union all
				select
					'40' as intgr_gnrlz_jgmt_rslt_cd
			) g
		left outer join
			(
				select
					rprt.intgr_gnrlz_jgmt_rslt_cd
					, 1 as cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				<where>
					<include refid="sqlWhereMyDataRprtInfo" />
					and rprt.intgr_gnrlz_jgmt_rslt_cd in ('30', '40')	/*통합종합판정결과코드:30(합격), 40(불합격)*/
				</where>

			) t
			on g.intgr_gnrlz_jgmt_rslt_cd = t.intgr_gnrlz_jgmt_rslt_cd
		group by
			g.intgr_gnrlz_jgmt_rslt_cd
		order by
			g.intgr_gnrlz_jgmt_rslt_cd asc

	</select>

	<!-- [나의 시험인증 현황] -> [성적서] > [월별 적합/부적합 추이(건수)] 데이터 조회 -->
	<select id="selectMyDataRprtMonthPassCnt" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtMonthPassCnt ([성적서] > [월별 적합/부적합 추이(건수)] 데이터 조회) */

		select
			TO_CHAR(to_date(g.dt, 'YYYYMMDD'), 'YY.MM') as dt
			, g.intgr_gnrlz_jgmt_rslt_cd
			, coalesce(sum(t.cnt), 0) as cnt
		from
			(
				select
					c.intgr_gnrlz_jgmt_rslt_cd
					, k.dt
				from
					(

						select
							'30' as intgr_gnrlz_jgmt_rslt_cd
						union all
						select
							'40' as intgr_gnrlz_jgmt_rslt_cd
					) c
					, (
						select
							to_char(a.dd, 'YYYYMM') as dt
						from
							(
								(
									with date_series as
										(
											select date(generate_series(now() - interval '11 month', now(), '1 month')) as dd
										)
									select
										dd
									from
										date_series
								)
							) a
					) k
			) g
		left outer join
			(
				select
					substring(rprt.rprt_issu_ymd, 1, 6) as rprt_issu_ym
					, rprt.intgr_gnrlz_jgmt_rslt_cd
					, 1 as cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				<where>

					<include refid="sqlWhereMyDataRprtInfo" />

					and substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

					and rprt.intgr_gnrlz_jgmt_rslt_cd in ('30', '40')	/*통합종합판정결과코드:30(합격), 40(불합격)*/

				</where>

			) t
			on g.intgr_gnrlz_jgmt_rslt_cd = t.intgr_gnrlz_jgmt_rslt_cd
			and g.dt = t.rprt_issu_ym
		group by
			g.intgr_gnrlz_jgmt_rslt_cd, g.dt
		order by
			g.intgr_gnrlz_jgmt_rslt_cd asc, g.dt asc

	</select>

	<!-- [나의 시험인증 현황] -> [성적서] > [TOP10 품목별 성적서 비율(건수)] 데이터 조회 -->
	<select id="selectMyDataRprtTopPdctgRate" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtTopPdctgRate ([성적서] > [TOP10 품목별 성적서 비율(건수)] 데이터 조회) */

		select
			p.inst_pdctg_cd
			, p.inst_pdctg_nm
			, p.cnt
		from
			(
				select
					pdctg.inst_pdctg_cd
					, max(pdctg.inst_pdctg_nm) as inst_pdctg_nm
					, count(1) as cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				inner join
					pt_rf_pdctg_bas pdctg	/*품목기본*/
					on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
					and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
					and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/

				<where>
					<include refid="sqlWhereMyDataRprtInfo" />
				</where>

				group by
					pdctg.inst_pdctg_cd
			) p

		order by
			p.cnt desc, p.inst_pdctg_cd asc
		limit 10

	</select>

	<!-- [나의 시험인증 현황] -> [성적서] > [월별 TOP10 품목별 성적서 추이(건수)] 데이터 조회 -->
	<select id="selectMyDataRprtTopPdctgCnt" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtTopPdctgCnt ([성적서] > [월별 TOP10 품목별 성적서 추이(건수)]) */

		select
			TO_CHAR(to_date(g.dt, 'YYYYMMDD'), 'YY.MM') as dt
			, g.inst_pdctg_cd
			, g.inst_pdctg_nm
			, coalesce(t.cnt, 0) as cnt
		from
			(
				select
					row_number() over() as rn
					, c.dt
					, b.inst_pdctg_cd
					, b.inst_pdctg_nm
				from
					(
						select
							p.inst_pdctg_cd
							, p.inst_pdctg_nm
						from
							(
								select
									pdctg.inst_pdctg_cd
									, max(pdctg.inst_pdctg_nm) as inst_pdctg_nm
									, count(1) as cnt
								from
									pt_rf_rprt_bas rprt	/*성적서기본*/
								inner join
									pt_rf_rcpt_bas rcpt	/*접수기본*/
									on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
									and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
									and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
								inner join
									pt_rf_pdctg_bas pdctg	/*품목기본*/
									on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
									and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
									and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/

								<where>

									<include refid="sqlWhereMyDataRprtInfo" />

									and substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

								</where>

								group by
									pdctg.inst_pdctg_cd
							) p
						order by
							p.cnt desc, p.inst_pdctg_cd asc
						limit 10
					) b
					, (
						select
							to_char(a.dd, 'YYYYMM') as dt
						from
							(
								(
									with date_series as
										(
											select date(generate_series(now() - interval '11 month', now(), '1 month')) as dd
										)
									select
										dd
									from
										date_series
								)
							) a
					) c
			) g
		left outer join
			(
				select
					substring(rprt.rprt_issu_ymd, 1, 6) as rprt_issu_ym
					, pdctg.inst_pdctg_cd
					, max(pdctg.inst_pdctg_nm) as inst_pdctg_nm
					, count(1) as cnt
					, sum(count(1)) over (partition by pdctg.inst_pdctg_cd) as tot_cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				inner join
					pt_rf_pdctg_bas pdctg	/*품목기본*/
					on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
					and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
					and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/
				where
					substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

					<include refid="sqlWhereMyDataRprtInfo" />

					and pdctg.inst_pdctg_cd in (
													select
														p.inst_pdctg_cd
													from
														(
															select
																pdctg.inst_pdctg_cd
																, count(1) as cnt
															from
																pt_rf_rprt_bas rprt	/*성적서기본*/
															inner join
																pt_rf_rcpt_bas rcpt	/*접수기본*/
																on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
																and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
																and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
															inner join
																pt_rf_pdctg_bas pdctg	/*품목기본*/
																on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
																and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
																and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/
															where
																substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

																<include refid="sqlWhereMyDataRprtInfo" />

															group by
																pdctg.inst_pdctg_cd
														) p
													order by
														p.cnt desc, p.inst_pdctg_cd asc
													limit 10
												)
				group by
					pdctg.inst_pdctg_cd, substring(rprt.rprt_issu_ymd, 1, 6)
			) t
			on g.dt = t.rprt_issu_ym
			and g.inst_pdctg_cd = t.inst_pdctg_cd
		order by
			g.rn asc

	</select>

	<!-- [나의 시험인증 현황] -> [성적서] > [TOP10 항목별 성적서 비율(건수)] 데이터 조회 -->
	<select id="selectMyDataRprtTopItemRate" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtTopItemRate ([성적서] > [TOP10 품목별 성적서 비율(건수)] 데이터 조회) */

		select
			i.inst_test_item_cd
			, i.inst_test_item_nm
			, i.cnt
		from
			(
				select
					item.inst_test_item_cd
					, max(item.inst_test_item_nm) as inst_test_item_nm
					, count(1) as cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				inner join
					pt_rf_pdctg_bas pdctg	/*품목기본*/
					on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
					and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
					and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/
				inner join
					pt_rf_sample_bas sample	/*시료기본*/
					on pdctg.inst_id = sample.inst_id	/*기관아이디*/
					and pdctg.inst_rcpt_no = sample.inst_rcpt_no	/*기관접수번호*/
					and pdctg.rprt_no = sample.rprt_no	/*성적서번호*/
					and pdctg.inst_pdctg_cd = sample.inst_pdctg_cd	/*기관품목코드*/
				inner join
					pt_rf_test_item_bas item	/*시험항목기본*/
					on sample.inst_id = item.inst_id	/*기관아이디*/
					and sample.inst_rcpt_no = item.inst_rcpt_no	/*기관접수번호*/
					and sample.rprt_no = item.rprt_no	/*성적서번호*/
					and sample.inst_pdctg_cd = item.inst_pdctg_cd	/*기관품목코드*/
					and sample.inst_sample_no = item.inst_sample_no	/*기관시료번호*/

				<where>
					<include refid="sqlWhereMyDataRprtInfo" />
				</where>

				group by
					item.inst_test_item_cd
			) i
		order by
			i.cnt desc, i.inst_test_item_cd asc
		limit 10

	</select>

	<!-- [나의 시험인증 현황] -> [성적서] > [월별 TOP10 항목별 성적서 추이(건수)] 데이터 조회 -->
	<select id="selectMyDataRprtTopItemCnt" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtTopItemCnt ([성적서] > [월별 TOP10 항목별 성적서 추이(건수)] 데이터 조회) */

		select
			TO_CHAR(to_date(g.dt, 'YYYYMMDD'), 'YY.MM') as dt
			, g.inst_test_item_cd
			, g.inst_test_item_nm
			, coalesce(t.cnt, 0) as cnt
		from
			(
				select
					row_number() over() as rn
					, c.dt
					, b.inst_test_item_cd
					, b.inst_test_item_nm
				from
					(
						select
							i.inst_test_item_cd
							, i.inst_test_item_nm
						from
							(
								select
									item.inst_test_item_cd
									, max(item.inst_test_item_nm) as inst_test_item_nm
									, count(1) as cnt
								from
									pt_rf_rprt_bas rprt	/*성적서기본*/
								inner join
									pt_rf_rcpt_bas rcpt	/*접수기본*/
									on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
									and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
									and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
								inner join
									pt_rf_pdctg_bas pdctg	/*품목기본*/
									on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
									and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
									and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/
								inner join
									pt_rf_sample_bas sample	/*시료기본*/
									on pdctg.inst_id = sample.inst_id	/*기관아이디*/
									and pdctg.inst_rcpt_no = sample.inst_rcpt_no	/*기관접수번호*/
									and pdctg.rprt_no = sample.rprt_no	/*성적서번호*/
									and pdctg.inst_pdctg_cd = sample.inst_pdctg_cd	/*기관품목코드*/
								inner join
									pt_rf_test_item_bas item	/*시험항목기본*/
									on sample.inst_id = item.inst_id	/*기관아이디*/
									and sample.inst_rcpt_no = item.inst_rcpt_no	/*기관접수번호*/
									and sample.rprt_no = item.rprt_no	/*성적서번호*/
									and sample.inst_pdctg_cd = item.inst_pdctg_cd	/*기관품목코드*/
									and sample.inst_sample_no = item.inst_sample_no	/*기관시료번호*/
								where
									substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

									<include refid="sqlWhereMyDataRprtInfo" />

								group by
									item.inst_test_item_cd
							) i
						order by
							i.cnt desc, i.inst_test_item_cd asc
						limit 10
					) b
					, (
						select
							to_char(a.dd, 'YYYYMM') as dt
						from
							(
								(
									with date_series as
										(
											select date(generate_series(now() - interval '11 month', now(), '1 month')) as dd
										)
									select
										dd
									from
										date_series
								)
							) a
					) c
			) g
		left outer join
			(
				select
					substring(rprt.rprt_issu_ymd, 1, 6) as rprt_issu_ym
					, item.inst_test_item_cd
					, max(item.inst_test_item_nm) as inst_test_item_nm
					, count(1) as cnt
					, sum(count(1)) over (partition by item.inst_test_item_cd) as tot_cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				inner join
					pt_rf_pdctg_bas pdctg	/*품목기본*/
					on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
					and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
					and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/
				inner join
					pt_rf_sample_bas sample	/*시료기본*/
					on pdctg.inst_id = sample.inst_id	/*기관아이디*/
					and pdctg.inst_rcpt_no = sample.inst_rcpt_no	/*기관접수번호*/
					and pdctg.rprt_no = sample.rprt_no	/*성적서번호*/
					and pdctg.inst_pdctg_cd = sample.inst_pdctg_cd	/*기관품목코드*/
				inner join
					pt_rf_test_item_bas item	/*시험항목기본*/
					on sample.inst_id = item.inst_id	/*기관아이디*/
					and sample.inst_rcpt_no = item.inst_rcpt_no	/*기관접수번호*/
					and sample.rprt_no = item.rprt_no	/*성적서번호*/
					and sample.inst_pdctg_cd = item.inst_pdctg_cd	/*기관품목코드*/
					and sample.inst_sample_no = item.inst_sample_no	/*기관시료번호*/
				where
					substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

					<include refid="sqlWhereMyDataRprtInfo" />

					and item.inst_test_item_cd in (
													select
														i.inst_test_item_cd
													from
														(
															select
																item.inst_test_item_cd
																, count(1) as cnt
															from
																pt_rf_rprt_bas rprt	/*성적서기본*/
															inner join
																pt_rf_rcpt_bas rcpt	/*접수기본*/
																on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
																and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
																and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
															inner join
																pt_rf_pdctg_bas pdctg	/*품목기본*/
																on rcpt.inst_id = pdctg.inst_id	/*기관아이디*/
																and rcpt.inst_rcpt_no = pdctg.inst_rcpt_no	/*기관접수번호*/
																and rcpt.rprt_no = pdctg.rprt_no	/*성적서번호*/
															inner join
																pt_rf_sample_bas sample	/*시료기본*/
																on pdctg.inst_id = sample.inst_id	/*기관아이디*/
																and pdctg.inst_rcpt_no = sample.inst_rcpt_no	/*기관접수번호*/
																and pdctg.rprt_no = sample.rprt_no	/*성적서번호*/
																and pdctg.inst_pdctg_cd = sample.inst_pdctg_cd	/*기관품목코드*/
															inner join
																pt_rf_test_item_bas item	/*시험항목기본*/
																on sample.inst_id = item.inst_id	/*기관아이디*/
																and sample.inst_rcpt_no = item.inst_rcpt_no	/*기관접수번호*/
																and sample.rprt_no = item.rprt_no	/*성적서번호*/
																and sample.inst_pdctg_cd = item.inst_pdctg_cd	/*기관품목코드*/
																and sample.inst_sample_no = item.inst_sample_no	/*기관시료번호*/
															where
																substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')

																<include refid="sqlWhereMyDataRprtInfo" />

															group by
																item.inst_test_item_cd
														) i
													order by
														i.cnt desc, i.inst_test_item_cd asc
													limit 10
												)
				group by
					item.inst_test_item_cd, substring(rprt.rprt_issu_ymd, 1, 6)
			) t
			on g.dt = t.rprt_issu_ym
			and g.inst_test_item_cd = t.inst_test_item_cd
		order by
			g.rn asc

	</select>

	<!-- [나의 시험인증 현황] -> [성적서] > [TOP10기업별 성적서 합격률] 데이터 조회 -->
	<select id="selectMyDataRprtTopEntRate" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtTopEntRate ([성적서] > [TOP10기업별 성적서 합격률] 데이터 조회) */

		select
			r.rcpt_co_brno
			, r.rcpt_co_nm
			, r.cnt
		from
			(
				select
					rcpt.rcpt_co_brno
					, max(rcpt.rcpt_co_nm) as rcpt_co_nm
					, count(1) as cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/

				<where>

					<include refid="sqlWhereMyDataRprtInfo" />

					and rprt.intgr_gnrlz_jgmt_rslt_cd in ('30')	/*통합종합판정결과코드:30(합격)*//*이 로직이 맞는지 확인 필요*/

				</where>

				group by
					rcpt.rcpt_co_brno
			) r
		order by
			r.cnt desc, r.rcpt_co_brno asc
		limit 10

	</select>

	<!--  [나의 시험인증 현황] -> [성적서] > [월별 TOP10기업 성적서 부적합 추이(건수)] 데이터 조회 -->
	<select id="selectMyDataRprtTopEntCnt" parameterType="com.katri.web.platformSvc.myData.model.MyDataStatSelectReq" resultType="com.katri.web.platformSvc.myData.model.MyDataStatSelectRes">
		/* MyDataStatMapper.selectMyDataRprtTopEntCnt ([성적서] > [월별 TOP10기업 성적서 부적합 추이(건수)] 데이터 조회) */

		select
			TO_CHAR(to_date(g.dt, 'YYYYMMDD'), 'YY.MM') as dt
			, g.rcpt_co_brno
			, g.rcpt_co_nm
			, coalesce(t.cnt, 0) as cnt
		from
			(
				select
					row_number() over() as rn
					, c.rcpt_co_brno
					, c.rcpt_co_nm
					, k.dt
				from
					(
						/*이 로직이 맞는지 확인 필요*/
						select
							r.rcpt_co_brno
							, r.rcpt_co_nm
						from
							(
								select
									rcpt.rcpt_co_brno
									, max(rcpt.rcpt_co_nm) as rcpt_co_nm
									, count(1) as cnt
								from
									pt_rf_rprt_bas rprt	/*성적서기본*/
								inner join
									pt_rf_rcpt_bas rcpt	/*접수기본*/
									on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
									and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
									and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
								where
									substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')
									and rprt.intgr_gnrlz_jgmt_rslt_cd in ('30')	/*통합종합판정결과코드:30(합격)*//*이 로직이 맞는지 확인 필요*/

									<include refid="sqlWhereMyDataRprtInfo" />

								group by
									rcpt.rcpt_co_brno
							) r
						order by
							r.cnt desc, r.rcpt_co_brno asc
						limit 10
					) c
					, (
						select
							to_char(a.dd, 'YYYYMM') as dt
						from
							(
								(
									with date_series as
										(
											select date(generate_series(now() - interval '11 month', now(), '1 month')) as dd
										)
									select
										dd
									from
										date_series
								)
							) a
					) k
			) g
		left outer join
			(
				select
					substring(rprt.rprt_issu_ymd, 1, 6) as rprt_issu_ym
					, rcpt.rcpt_co_brno
					, count(1) as cnt
				from
					pt_rf_rprt_bas rprt	/*성적서기본*/
				inner join
					pt_rf_rcpt_bas rcpt	/*접수기본*/
					on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
					and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
					and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
				where
					substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')
					and rprt.intgr_gnrlz_jgmt_rslt_cd in ('30')	/*통합종합판정결과코드:30(합격)*//*이 로직이 맞는지 확인 필요*/
					/*검색조건:조회조건>전체 - 아래 주석 제거 처리 필요*/

					<include refid="sqlWhereMyDataRprtInfo" />

					and rcpt.rcpt_co_brno in (
												/*이 로직이 맞는지 확인 필요*/
												select
													r.rcpt_co_brno
												from
													(
														select
															rcpt.rcpt_co_brno
															, count(1) as cnt
														from
															pt_rf_rprt_bas rprt	/*성적서기본*/
														inner join
															pt_rf_rcpt_bas rcpt	/*접수기본*/
															on rprt.inst_id = rcpt.inst_id	/*기관아이디*/
															and rprt.inst_rcpt_no = rcpt.inst_rcpt_no	/*기관접수번호*/
															and rprt.rprt_no = rcpt.rprt_no	/*성적서번호*/
														where
															substring(rprt.rprt_issu_ymd, 1, 6) between to_char(now() - interval '11 month', 'YYYYMM') and to_char(now(), 'YYYYMM')
															and rprt.intgr_gnrlz_jgmt_rslt_cd in ('30')	/*통합종합판정결과코드:30(합격)*//*이 로직이 맞는지 확인 필요*/

															<include refid="sqlWhereMyDataRprtInfo" />

														group by
															rcpt.rcpt_co_brno
													) r
												order by
													r.cnt desc, r.rcpt_co_brno asc
												limit 10
											)
				group by
					rcpt.rcpt_co_brno, substring(rprt.rprt_issu_ymd, 1, 6)
			) t
			on g.rcpt_co_brno = t.rcpt_co_brno
			and g.dt = t.rprt_issu_ym
		order by
			g.rn asc

	</select>



</mapper>