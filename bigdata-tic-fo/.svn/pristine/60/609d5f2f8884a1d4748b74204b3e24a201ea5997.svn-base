package com.katri.web.comm.service;

import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.client.j2se.MatrixToImageConfig;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import com.katri.common.FileConst;
import com.katri.common.GlobalExceptionHandler.CustomMessageException;
import com.katri.web.comm.model.FileDto;
import com.katri.web.comm.model.QRReq;
import com.nhncorp.lucy.security.xss.XssPreventer;

import lombok.RequiredArgsConstructor;

/***************************************************
 * <ul>
 * <li>업무 그룹명 : QR 서비스</li>
 * <li>서브 업무명 : QR 서비스</li>
 * <li>설		 명 : QR생성, QR업로드 QR 다운로드 등 QR 관련 기능 제공</li>
 * <li>작   성   자 : ASH</li>
 * <li>작   성   일 : 2022. 09. 07.</li>
 * </ul>
 * <pre>
 * ======================================
 * 변경자/변경일 :
 * 변경사유/내역 :
 * --------------------------------------
 * 변경자/변경일 :
 * 변경사유/내역 :
 * ======================================
 * </pre>
 ***************************************************/
@Service
@RequiredArgsConstructor
@Transactional(rollbackFor = {Exception.class})
public class QRService {

	/** 파일 Service */
	private final FileService fileService;

	/*****************************************************
	 * QR 파일 정보 조회 (없으면 저장 후 파일정보)
	 * @param qrReq QR 등록정보
	 * @return FileDto QR 파일정보
	 * @throws Exception
	*****************************************************/
	public FileDto getQRFileData(QRReq qrReq) throws Exception {

		FileDto fileDto = new FileDto();

		// [[0]] URL convertDBToHtml 해주기
		qrReq.setQrUrl(XssPreventer.unescape(qrReq.getQrUrl()));

		// [[1]] 기존에 파일 있는지 검색()
		/* 1-1. 조회하기위한 FILEDTO셋팅 */
		FileDto srchFileDto =  new FileDto();
		srchFileDto.setFileDivNm(FileConst.File.FILE_DIV_NM_QR_FILE); //파일구분명
		srchFileDto.setRefDivVal(qrReq.getQrRefDivVal()); //참조구분값
		/* 1-2. 검색 */
		fileDto = fileService.selectFile(srchFileDto);

		// [[2]] 만약에 없으면 생성 및 저장
		if(fileDto == null) {
			fileDto =  this.makeQRFile(qrReq);
		}

		return fileDto;

	}

	/*****************************************************
	 * QR파일 생성 + 저장(물리 + 논리)
	 * @param qrReq QR 등록정보
	 * @return FileDto QR 등록된 파일 정보
	 * @throws Exception
	*****************************************************/
	public FileDto makeQRFile(QRReq qrReq) throws Exception {

		FileDto fileDto = new FileDto();

		/* [[1]]. QR 생성하기 위한 값 셋팅 + bufferedImage 생성 */
		QRCodeWriter qrCodeWriter = new QRCodeWriter();

		// 1-1. url 한글 코드 깨뜨리기
		String utfUrl = new String(qrReq.getQrUrl().getBytes("UTF-8"), "ISO-8859-1");
		qrReq.setQrEncodeUrl(utfUrl);

		// 1-2. BitMatrix 객체 생성 (url 지정 + width/height값 지정)
		BitMatrix bitMatrix = qrCodeWriter.encode(qrReq.getQrEncodeUrl(), BarcodeFormat.QR_CODE, 500, 500);

		// 1-3. 색지정
		int qrcodeColor	=	0xFF2e4e96;		// 큐알코드 바코드색상값
		int backgroundColor = 0xFFFFFFFF;	// 큐알코드 배경색상값
		MatrixToImageConfig matrixToImageConfig = new MatrixToImageConfig(qrcodeColor,backgroundColor);

		// 1-4. bufferedImage 생성
		BufferedImage bufferedImage	= MatrixToImageWriter.toBufferedImage(bitMatrix, matrixToImageConfig);

		/* [[2]]. QR파일 저장 (물리 + 논리) */
		fileDto = this.saveQRFile(bufferedImage, qrReq);

		return fileDto;

	}

	/*****************************************************
	 * QR파일 저장 (물리 + 논리)
	 * @param bufferedImage IMG 객체
	 * @param qrReq QR 등록정보
	 * @return FileDto QR 등록된 파일 정보
	 * @throws Exception
	*****************************************************/
	public FileDto saveQRFile(BufferedImage bufferedImage, QRReq qrReq) throws Exception {

		FileDto fileDto = new FileDto();

		// 물리저장 + 파일dto
		fileDto = fileService.savePhyQRImageFileReturnFile(FileConst.File.FILE_DIV_NM_QR_FILE, bufferedImage, "png", qrReq);
		if(fileDto == null) {
			throw new CustomMessageException("QR물리 저장중 오류");
		}

		// LIST에 FileDto넣기
		List<FileDto> listFileDto = new ArrayList<FileDto>(); // FileDto를 넣을 리스트
		listFileDto.add(fileDto);

		// 파일테이블 저장[tb_file_mng]
		listFileDto = fileService.saveDBFile(qrReq.getQrRefDivVal(), listFileDto);
		fileDto = listFileDto.get(0); //file_sn가 들어있음

		return fileDto;

	}


}
