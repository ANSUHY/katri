<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c"		uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>

<%@ page import="com.katri.common.FileConst" %>
<c:set var="FILE_DIV_NM_BOARD_IMG" 	value="<%=FileConst.File.FILE_DIV_NM_BOARD_IMG%>" />
<c:set var="FILE_DIV_NM_BOARD_FILE" value="<%=FileConst.File.FILE_DIV_NM_BOARD_FILE%>" />

<script type="text/javascript" src="/smarteditor/js/service/HuskyEZCreator.js" charset="charset=UTF-8"></script>
<script type="text/javascript">
	const FILE_MAX_CNT = 3; // 파일 첨부 최대 3개
	let savedFileCnt = 0; // 기존 업로드된 파일 개수

	let oEditors = [];

	$(function(){
		fn_preventEnter(); // 엔터 키 방지
		fn_noticePopUpInit(); // 초기 작업
		fn_getNoticeClfCd(); // 분류 코드
		//fn_getNoticeDetail(); // 공지사항 조회
	});

	/**
	 * 엔터 키 입력 시 submit 방지
	 */
	function fn_preventEnter() {
		$(document).keydown(function(e){
			if (e.keyCode === 13) {
				e.preventDefault();
			}
		});
	}

	/**
	 * 파일 변경 유효성 체크 & 파일 용량 체크 10MB
	 */
	function fn_fileUpload(e) {
		/* 파일 변경 유효성 체크 */
		const chkExtImg = ["jpg", "png", "gif"]; // 파일 구분 코드 (BOARD IMG)
		const chkExtFile = ["mp3","wma","wav","m4a","3gp","hwp","doc","docx","ppt","pptx","zip","xls","xlsx","pdf","txt"]; // 파일 구분 코드 (BOARD FILE)

		// 허용되는 확장자 체크
		let files = $(e)[0].files;

		for (let i= 0; i < files.length; i++) {
			// 업로드 파일 확장자
			let targetExt = files[i].name.split(".").pop().toLowerCase();

			if($.inArray(targetExt, chkExtImg) > -1) {
				$(e).attr("name", "${FILE_DIV_NM_BOARD_IMG}"); // 파일 구분 코드 (BOARD IMG)
			} else if ($.inArray(targetExt, chkExtFile) > -1) {
				$(e).attr("name", "${FILE_DIV_NM_BOARD_FILE}"); // 파일 구분 코드 (BOARD FILE)
			} else {
				$(e).val(""); // 초기화
				alert("<spring:message code='result-message.messages.common.message.data.file.exte.error'/>"); // 파일 확장자가 맞지않습니다. 올바른 파일을 넣으세요.
				return false;
			}
		}

		/* 파일 용량 체크 10MB */
		if($(e).val() !== "" || $(e).val !== null){
			const maxSize = 10 * 1024 * 1024; // 최대 업로드 사이즈 10MB

			const fileSize = $(e)[0].files[0].size;
			if(fileSize > maxSize) {
				$(e).val(""); // 초기화
				alert("<spring:message code='result-message.messages.notice.message.file.size' arguments='10mb'/>"); // 첨부파일의 최대사이즈는 개당 10mb입니다.
				return false;
			}
		}
	}

	/**
	 * 초기 작업
	 */
	function fn_noticePopUpInit() {
		nhn.husky.EZCreator.createInIFrame({ 
			oAppRef: oEditors,
			elPlaceHolder: "nttCn",
			sSkinURI: "/smarteditor/SmartEditor2Skin.html",
			fCreator: "createSEditor2",
			htParams : {fOnBeforeUnload : function(){}}, //alert창 띄우지 않기
			fOnAppLoad : function(){
				fn_getNoticeDetail();
			}
		});
	}

	/**
	 * 공지사항 분류 코드 가져오기
	 */
	function fn_getNoticeClfCd() {
		$.blockUI();

		$.ajax({
			  url: "/ctnt/notice/getNoticeClfCd"
			, type: "GET"
			, dataType: "json"
		})
		.done(function(jsonData, textStatus, jqXHR){
			$.unblockUI();

			let html = "";
			if (jsonData.resultCode === 200) {
				if (jsonData.data.list !== null && jsonData.data.list.length > 0) {
					$.each(jsonData.data.list, function(index, data) {
						html += "<option value='" + data.comnCd + "'>" + data.comnCdNm + "</option>";
					});
				}

				$("#nttClfCd").html(html);
			} else {
				alert(jsonData.resultMessage);
			}
		});
	}

	/**
	 * 공지사항 글 작성/수정
	 */
	function fn_saveNotice() {
		oEditors.getById["nttCn"].exec("UPDATE_CONTENTS_FIELD", []);

		if (fn_validCheck()) {
			$.blockUI();

			// 데이터 폼
			let form = $("#noticeFrm")[0];
			let jData = new FormData(form);

			$.ajax({
				  url: "/ctnt/notice/saveNotice"
				, type: "POST"
				, enctype		: "multipart/form-data"
				, cache			: false
				, data			: jData
				, processData 	: false
				, contentType	: false
			})
			.done(function(jsonData, textStatus, jqXHR){
				$.unblockUI();

				if (jsonData.resultCode === 200) {
					alert("<spring:message code='result-message.messages.common.message.save'/>"); // 정상적으로 저장 하였습니다.
					opener.fn_getNoticeList(1);
					self.close();
				} else {
					alert(jsonData.resultMessage);
					self.close();
				}
			});
		}
	}

	/**
	 * 선택한 공지사항 조회
	 */
	function fn_getNoticeDetail() {
		$("#nttTyCd").val(opener.$("#nttTyCd").val()); // 게시물 유형 코드

		if (!fn_emptyCheck(opener.$("#targetNttSn").val())) {
			$.blockUI();

			$.ajax({
				  url: "/ctnt/notice/getNoticeDetail"
				, type: "GET"
				, dataType: "json"
				, data: {nttSn : opener.$("#targetNttSn").val()}
			})
			.done(function(jsonData, textStatus, jqXHR){
				$.unblockUI();

				if (jsonData.resultCode === 200) {
					if (jsonData.data !== null) {
						const data = jsonData.data;

						// 데이터 세팅
						$("#nttSn").val(data.nttSn);
						$("#nttSjNm").val(fn_convertXss(unescapeHtml(data.nttSjNm)));
						$("#nttCn").html(data.nttCn);
						oEditors.getById["nttCn"].exec("LOAD_CONTENTS_FIELD", []);
						$("#nttClfCd").val(data.nttClfCd).prop("selected", true);

						if (data.fileDtoList !== null || data.fileDtoList.length !== 0) {
							let fileHtml = "";
							// 업로드 파일 목록
							$.each(data.fileDtoList, function(index, data) {
								fileHtml += "<p>"
								fileHtml += "	<a href='/file/downloadFile?encodeFileSn=" + data.encodeFileSn + "'>" + data.orgnlFileNm + "</a>&nbsp;"
								fileHtml += "	<button type='button' class='btn btn-white btn-sm' onclick='fn_deleteFile(this, \"" + data.encodeFileSn + "\")'>- 삭제</button>"
								fileHtml += "</p>";
							});

							// 파일 업로드 버튼이 기존 업로드된 파일의 개수에 따라 다르게 보여지기 위해
							savedFileCnt = data.fileDtoCnt; // 기존 업로드된 파일 개수

							$("#addFileArea").show();
							$("#addInputFileBtn").show();

							if (data.fileDtoCnt >= FILE_MAX_CNT) {
								$("#addFileArea").hide();
							} else if (data.fileDtoCnt === FILE_MAX_CNT - 1) {
								$("#addInputFileBtn").hide();
							}

							//
							$("#uploadFileArea").html(fileHtml);
						}
					}
				} else {
					alert(jsonData.resultMessage);
					self.close();
				}
			});
		}
	}

	/**
	 * 작성/수정 시 유효성 검사
	 */
	function fn_validCheck() {
		const nttSjNm = $("#nttSjNm").val(); // 제목
		const nttCn = $("#nttCn").val(); // 내용
		const nttClfCd = $("#nttClfCd").val(); // 분류

		let isValid = true;

		// 제목
		if($.trim(nttSjNm) == "") {
			alert("<spring:message code='result-message.messages.common.message.required.data' arguments='제목'/>") // '{0}는(은) 필수 입력항목입니다.'
			$("#nttSjNm").focus();
			isValid = false;
			return false;
		}

		// 네이버에디터
		if(nttCn == ""  || nttCn == null || nttCn == '&nbsp;' || nttCn == '<p>&nbsp;</p>' || nttCn == '<p><br></p>')  {
			alert("<spring:message code='result-message.messages.common.message.required.data' arguments='내용'/>") // '{0}는(은) 필수 입력항목입니다.'
			$("#nttCn").focus();
			isValid = false;
			return false;
		}

		// 분류
		if (fn_emptyCheck(nttClfCd)) {
			alert("<spring:message code='result-message.messages.common.message.required.data' arguments='분류'/>") // '{0}는(은) 필수 입력항목입니다.'
			isValid = false;
			return false;
		}

		return isValid;
	}

	/**
	 * 파일 첨부 추가
	 */
	function fn_addFileBtn() {
		const html =  "<p>"
					+ "	<input type='file' class='btn btn-white' style='display: inline-block;' onchange='fn_fileUpload(this)'>&nbsp;"
					+ "	<button type='button' class='btn btn-white btn-sm' onclick='fn_deleteFile(this)'>- 삭제</button>"
					+ "</p>";

		if ($("input[type=file]").length > (FILE_MAX_CNT - savedFileCnt) - 1) {
			alert("<spring:message code='result-message.messages.notice.message.file.limit' arguments='" + FILE_MAX_CNT + "'/>"); // 파일첨부는 최대 3개 까지는 가능합니다.
		} else {
			$("#addFileArea").append(html);
		}
	}

	/**
	 * 파일 삭제
	 */
	function fn_deleteFile(e, encodeFileSn) {
		// 파일 번호 존재하는 경우
		if(!fn_emptyCheck(encodeFileSn)) {
			$.ajax({
				  url: "/file/deleteFile"
				, type: "POST"
				, dataType: "json"
				, data: { encodeFileSn : encodeFileSn }
			})
			.done(function(jsonData){
				if (jsonData.resultCode === 200) {
					// UI 삭제
					$(e).parent().remove();

					alert("<spring:message code='result-message.messages.common.message.delete'/>"); // 정상적으로 삭제 하였습니다.
				} else {
					alert(jsonData.resultMessage); // message.yaml
				}

				fn_getNoticeDetail();
			});
		} else {
			// UI 삭제
			$(e).parent().remove();
		}
	}

	/**
	 * 팝업 닫기
	 */
	function fn_closePopUp() {
		self.close();
	}

	/**
	 * html unescape 처리 (특수문자 복원)
	 */
	function unescapeHtml(text) {
		let doc = new DOMParser().parseFromString(text, "text/html");
		return doc.documentElement.textContent;
	}
</script>

<div id="pop-wrap">

	<h1 class="pop-tit">공지사항</h1>

	<div class="pop-contnet">
		<form name="noticeFrm" id="noticeFrm">
			<input type="hidden" name="nttTyCd" id="nttTyCd" />
			<input type="hidden" name="nttSn" id="nttSn" />
			<div class="hd-search">
				<table>
					<colgroup>
						<col style="width:100px;"><col>
					</colgroup>
					<tbody>
						<tr>
							<th>
								<span class="blt_req">*</span> 분류
							</th>
							<td>
								<select name="nttClfCd" id="nttClfCd">
								</select>
							</td>
						</tr>
						<tr>
							<th>
								<span class="blt_req">*</span> 제목
							</th>
							<td>
								<input type="text" name="nttSjNm" id="nttSjNm" class="input" style="width:100%;" />
							</td>
						</tr>
						<tr>
							<th>
								<span class="blt_req">*</span> 내용
							</th>
							<td>
								<!-- 에디터 영역-->
								<textarea name="nttCn" id="nttCn" class="textarea block"></textarea>
								<!-- // 에디터 영역-->
							</td>
						</tr>
						<tr>
							<th>
								파일 첨부
							</th>
							<td >
								<p id="addFileArea">
									<input type="file" name="${FILE_DIV_NM_BOARD_FILE}" class="btn btn-white" onchange="fn_fileUpload(this)"/>
									<button type="button" id="addInputFileBtn" onclick="fn_addFileBtn()" class="btn btn-white btn-sm">+ 추가</button>
								</p>
								<div id="uploadFileArea">
								</div>
								<p>※ 파일은 최대 3개까지 등록이 가능하며, 개당 최대 사이즈는 10mb 입니다.</p>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</form>

		<div class="btn-box">
			<a href="javascript:void(0)" onclick="fn_closePopUp()" class="btn btn-default">취소</a>
			<a href="javascript:void(0)" onclick="fn_saveNotice()" class="btn btn-blue">저장</a>
		</div>

	</div><!-- /pop-contnet -->
	<a href="javascript:void(0)" onclick="fn_closePopUp()" class="pop-close"><i class="fa fa-times"></i></a>
</div><!-- /pop-wrao -->